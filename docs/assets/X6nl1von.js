import{_ as N,a as W,b as M,c as H,d as V,e as G}from"./ChvMsacI.js";import{_ as K}from"./B0IMRMEv.js";import{g as J,i as X,k as Z,r as q,l as a,h as Y,m as Q,o as d,c as ee,u as e,n as m,b as S,w as te,q as se}from"./nlcBd7m8.js";import{u as ne}from"./DBI-y-W5.js";import{d as re}from"./DhhoVSgj.js";import"./CEQtGfPO.js";import"./CUV8rRWz.js";const i={openapi:"3.0.0",servers:[{url:"https://petstore.swagger.io/v2",description:"Default server"},{url:"https://petstore.swagger.io/sandbox",description:"Sandbox server"}],info:{title:"Pet Store",version:"1.0.0",description:`<h1>Introduction</h1>
<p>Petstore illustrate the typical design decisions and tradeoffs a developer makes when building an enterprise application. The demo shows how to document REST API services <strong>OpenAPI format</strong> and is based on <a href="http://petstore.swagger.io/">Petstore sample</a> by <a href="http://swagger.io">swagger.io</a> team. It was further <strong>extended</strong> by <a href="https://github.com/Redocly/redoc">ReDoc</a> Team.</p>
<h2>API Categories</h2>
<p>The APIs are divided in 3 separate categories, to make things easy to discover. In RapiDoc OpenAPI renderer these catagories are organized into Tags. each of these tags will contain their respective APIs In case you are viewing RapiDoc in <code>read-mode</code> then the Tags and their operation will be organized in Left Navigation bar.
Below is how these APIs are arranged</p>
<ul>
<li>Pet</li>
<li>Store</li>
<li>Users</li>
</ul>
<h2>API Operations</h2>
<h3>Pet Operations</h3>
<p>Below is the list of supported operations</p>
<ul>
<li>Update an existing pet</li>
<li>Add a new pet to the store</li>
<li>Find Pet by ID</li>
<li>Updates a pet in the store</li>
<li>Deletes a pet</li>
<li>Upload an pet image</li>
<li>Finds Pets by status</li>
<li>Finds Pets by tags</li>
</ul>
<h3>Store Operations</h3>
<p>Below is the list of supported operations</p>
<ul>
<li>Get pet inventory by status</li>
<li>Place an order for a pet</li>
<li>Find purchase order by ID</li>
<li>Delete purchase order</li>
</ul>
<h3>User Operations</h3>
<p>Below is the list of supported operations</p>
<ul>
<li>Create User</li>
<li>Login and Logout of user</li>
<li>Get user by user name</li>
<li>Update user</li>
<li>Delete user</li>
</ul>
<h1>Example</h1>
<p>Below is a small code sample how to sender this OpenAPI spec using RapiDoc</p>
<pre><code class="hljs language-html">  <span class="hljs-meta">&lt;!doctype <span class="hljs-keyword">html</span>&gt;</span> <span class="hljs-comment">&lt;!-- Important: must specify --&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span> <span class="hljs-comment">&lt;!-- Important: rapi-doc uses utf8 characters --&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;module&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/rapidoc/dist/rapidoc-min.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">rapi-doc</span>
      <span class="hljs-attr">spec-url</span> = <span class="hljs-string">&quot;https://petstore.swagger.io/v2/swagger.json&quot;</span>
    &gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">rapi-doc</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span>
</code></pre><h1>OpenAPI Version</h1>
<p>You can find the version of OpenAPI spec from the <code>version</code> object</p>
<pre><code class="hljs language-yaml">  <span class="hljs-attr">openapi:</span> <span class="hljs-number">3.0</span><span class="hljs-number">.2</span>
  <span class="hljs-attr">info:</span>
    <span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;1.0&#x27;</span>
    <span class="hljs-attr">title:</span> <span class="hljs-string">Server</span> <span class="hljs-string">Variables</span>
  <span class="hljs-string">...</span>
</code></pre><h1>Authentication</h1>
<p>Petstore offers two forms of authentication:</p>
<ul>
<li>API Key</li>
<li>OAuth2</li>
</ul>
<p>OAuth2 - an open protocol to allow secure authorization in a simple and standard method from web, mobile and desktop applications.</p>
`},externalDocs:{description:"Find out how to create Github repo for your OpenAPI spec.",url:"https://github.com/Rebilly/generator-openapi-repo"},tags:{pet:{name:"pet",description:"Everything about your Pets"},store:{name:"store",description:"Access to Petstore orders","x-tag-expanded":!1},user:{name:"user",description:"Operations about user"},pet_model:{name:"pet_model",description:"The Pet Model"},store_model:{name:"store_model",description:"The Order Model"}},paths:{"/pet":{parameters:[{name:"cookieParam",in:"cookie",description:"Some cookie",required:!0,schema:{type:"string",format:"string"}}],post:{tags:["pet"],summary:"Add a new pet to the store",description:"Add new pet to the store inventory.",operationId:"addPet",responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}],"x-code-samples":[{lang:"HTTP",label:"HTTP Request",source:`POST /pet HTTP/1.1
Host: example.org
Content-Type: application/json; charset=utf-8
Content-Length: 137

{
  &quot;status&quot;: &quot;ok&quot;,
  &quot;extended&quot;: true,
  &quot;results&quot;: [
    {&quot;value&quot;: 0, &quot;type&quot;: &quot;int64&quot;},
    {&quot;value&quot;: 1.0e+3, &quot;type&quot;: &quot;decimal&quot;}
  ]
}
`},{lang:"java",label:"JAVA",source:`private String createPet() throws JsonProcessingException {
  Pet pet = new Pet();
  pet.setId(1l);
  pet.setName(&quot;Wuffy&quot;);
  Category category = new Category(1l, &quot;Hund&quot;);
  pet.setCategory(category);
  return new ObjectMapper().writeValueAsString(pet);
}
`}],requestBody:"#/components/requestBodies/Pet"},put:{tags:["pet"],summary:"Update an existing pet",description:"",operationId:"updatePet",responses:{400:{description:"Invalid ID supplied"},404:{description:"Pet not found"},405:{description:"Validation exception"}},security:[{petstore_auth:["write:pets","read:pets"]}],"x-code-samples":[{lang:"PHP",source:`$form = new &#x5C;PetStore&#x5C;Entities&#x5C;Pet();
$form-&gt;setPetId(1);
$form-&gt;setPetType(&quot;Dog&quot;);
$form-&gt;setName(&quot;Rex&quot;);
// set other fields
try {
    $pet = $client-&gt;pets()-&gt;update($form);
} catch (UnprocessableEntityException $e) {
    var_dump($e-&gt;getErrors());
}
`}],requestBody:"#/components/requestBodies/Pet"}},"/pet/{petId}":{get:{tags:["pet"],summary:"Find pet by ID",description:"Returns a single pet",operationId:"getPetById",parameters:[{name:"petId",in:"path",description:"ID of pet to return",required:!0,deprecated:!0,schema:{type:"integer",format:"int64"}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:"#/components/schemas/Pet"},"application/xml":{schema:"#/components/schemas/Pet"}}},400:{description:"Invalid ID supplied"},404:{description:"Pet not found"}},security:[{api_key:[]}]},post:{tags:["pet"],summary:"Updates a pet in the store with form data",description:"",operationId:"updatePetWithForm",parameters:[{name:"petId",in:"path",description:"ID of pet that needs to be updated",required:!0,schema:{type:"integer",format:"int64"}}],responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{content:{"application/x-www-form-urlencoded":{schema:{type:"object",properties:{name:{description:"Updated name of the pet",type:"string"},status:{description:"Updated status of the pet",type:"string"}}}}}}},delete:{tags:["pet"],summary:"Deletes a pet",description:"",operationId:"deletePet",parameters:[{name:"api_key",in:"header",required:!1,schema:{type:"string"},example:"Bearer &lt;TOKEN>"},{name:"petId",in:"path",description:"Pet id to delete",required:!0,schema:{type:"integer",format:"int64"}}],responses:{400:{description:"Invalid pet value"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/{petId}/uploadImage":{post:{tags:["pet"],summary:"uploads an image",description:"",operationId:"uploadFile",parameters:[{name:"petId",in:"path",description:"ID of pet to update",required:!0,schema:{type:"integer",format:"int64"}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:"#/components/schemas/ApiResponse"}}}},security:[{petstore_auth:["write:pets","read:pets"]}],requestBody:{content:{"application/octet-stream":{schema:{type:"string",format:"binary"}}}}}},"/pet/findByStatus":{get:{tags:["pet"],summary:"Finds Pets by status",description:"Multiple status values can be provided with comma seperated strings",operationId:"findPetsByStatus",parameters:[{name:"status",in:"query",description:"Status values that need to be considered for filter",required:!0,style:"form",schema:{type:"array",minItems:1,maxItems:3,items:{type:"string",enum:["available","pending","sold"],default:"available"}}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:"#/components/schemas/Pet"}},"application/xml":{schema:{type:"array",items:"#/components/schemas/Pet"}}}},400:{description:"Invalid status value"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/findByTags":{get:{tags:["pet"],summary:"Finds Pets by tags",description:"Muliple tags can be provided with comma seperated strings. Use tag1, tag2, tag3 for testing.",operationId:"findPetsByTags",deprecated:!0,parameters:[{name:"tags",in:"query",description:"Tags to filter by",required:!0,style:"form",schema:{type:"array",items:{type:"string"}}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"array",items:"#/components/schemas/Pet"}},"application/xml":{schema:{type:"array",items:"#/components/schemas/Pet"}}}},400:{description:"Invalid tag value"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/store/inventory":{get:{tags:["store"],summary:"Returns pet inventories by status",description:"Returns a map of status codes to quantities",operationId:"getInventory",responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",additionalProperties:{type:"integer",format:"int32"}}}}}},security:[{api_key:[]}]}},"/store/order":{post:{tags:["store"],summary:"Place an order for a pet",description:"",operationId:"placeOrder",responses:{200:{description:"successful operation",content:{"application/json":{schema:"#/components/schemas/Order"},"application/xml":{schema:"#/components/schemas/Order"}}},400:{description:"Invalid Order",content:{"application/json":{example:{status:400,message:"Invalid Order"}}}}},requestBody:{content:{"application/json":{schema:"#/components/schemas/Order"}},description:"order placed for purchasing the pet",required:!0}}},"/store/order/{orderId}":{get:{tags:["store"],summary:"Find purchase order by ID",description:"For valid response try integer IDs with value &lt;= 5 or &gt; 10. Other values will generated exceptions",operationId:"getOrderById",parameters:[{name:"orderId",in:"path",description:"ID of pet that needs to be fetched",required:!0,schema:{type:"integer",format:"int64",minimum:1,maximum:5}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:"#/components/schemas/Order"},"application/xml":{schema:"#/components/schemas/Order"}}},400:{description:"Invalid ID supplied"},404:{description:"Order not found"}}},delete:{tags:["store"],summary:"Delete purchase order by ID",description:"For valid response try integer IDs with value &lt; 1000. Anything above 1000 or nonintegers will generate API errors",operationId:"deleteOrder",parameters:[{name:"orderId",in:"path",description:"ID of the order that needs to be deleted",required:!0,schema:{type:"string",minimum:1}}],responses:{400:{description:"Invalid ID supplied"},404:{description:"Order not found"}}}},"/user":{post:{tags:["user"],summary:"Create user",description:"This can only be done by the logged in user.",operationId:"createUser",responses:{default:{description:"successful operation"}},requestBody:{content:{"application/json":{schema:"#/components/schemas/User"}},description:"Created user object",required:!0}}},"/user/{username}":{get:{tags:["user"],summary:"Get user by user name",description:"",operationId:"getUserByName",parameters:[{name:"username",in:"path",description:"The name that needs to be fetched. Use user1 for testing. ",required:!0,schema:{type:"string"}}],responses:{200:{description:"successful operation",content:{"application/json":{schema:"#/components/schemas/User"},"application/xml":{schema:"#/components/schemas/User"}}},400:{description:"Invalid username supplied"},404:{description:"User not found"}}},put:{tags:["user"],summary:"Updated user",description:"This can only be done by the logged in user.",operationId:"updateUser",parameters:[{name:"username",in:"path",description:"name that need to be deleted",required:!0,schema:{type:"string"}}],responses:{400:{description:"Invalid user supplied"},404:{description:"User not found"}},requestBody:{content:{"application/json":{schema:"#/components/schemas/User"}},description:"Updated user object",required:!0}},delete:{tags:["user"],summary:"Delete user",description:"This can only be done by the logged in user.",operationId:"deleteUser",parameters:[{name:"username",in:"path",description:"The name that needs to be deleted",required:!0,schema:{type:"string"}}],responses:{400:{description:"Invalid username supplied"},404:{description:"User not found"}}}},"/user/createWithArray":{post:{tags:["user"],summary:"Creates list of users with given input array",description:"",operationId:"createUsersWithArrayInput",responses:{default:{description:"successful operation"}},requestBody:"#/components/requestBodies/UserArray"}},"/user/createWithList":{post:{tags:["user"],summary:"Creates list of users with given input array",description:"",operationId:"createUsersWithListInput",responses:{default:{description:"successful operation"}},requestBody:"#/components/requestBodies/UserArray"}},"/user/login":{get:{tags:["user"],summary:"Logs user into the system",description:"",operationId:"loginUser",parameters:[{name:"username",in:"query",description:"The user name for login",required:!0,schema:{type:"string"}},{name:"password",in:"query",description:"The password for login in clear text",required:!0,schema:{type:"string"}}],responses:{200:{description:"successful operation",headers:{"X-Rate-Limit":{description:`calls per hour allowed by the user. The rate limit is applid to avoid DoS attack or an accdental usage of this
API such as putting it in a loop. \`X-Rate-Limit\` can vary based on time of the day, user, load and many more other factors.
This header will provide information on the rate limit which the user can use to adapt their task
`,schema:{type:"integer",format:"int32"}},"X-Expires-After":{description:`date in UTC when toekn expires. This information can be used to makke request for new tokens if its near expiry and thereby
extend an existing session.
`,schema:{type:"string",format:"date-time"}}},content:{"application/json":{schema:{type:"string"},examples:{response:{value:"OK"}}},"application/xml":{schema:{type:"string"},examples:{response:{value:"<Message&gt; OK &lt;/Message>"}}},"text/plain":{examples:{response:{value:"OK"}}}}},400:{description:"Invalid username/password supplied"}}}},"/user/logout":{get:{tags:["user"],summary:"Logs out current logged in user session",description:"",operationId:"logoutUser",responses:{default:{description:"successful operation"}}}}},components:{schemas:{ApiResponse:{type:"object",properties:{code:{type:"integer",format:"int32"},type:{type:"string"},message:{type:"string"}}},Cat:{description:"A representation of a cat",allOf:["#/components/schemas/Pet",{type:"object",properties:{huntingSkill:{type:"string",description:"The measured skill for hunting",default:"lazy",enum:["clueless","lazy","adventurous","aggressive"]}},required:["huntingSkill"]}]},Category:{type:"object",properties:{id:{description:"Category ID",allOf:["#/components/schemas/Id"]},name:{description:"Category name",type:"string",minLength:1},sub:{description:"Test Sub Category",type:"object",properties:{prop1:{type:"string",description:"Dumb Property"}}}},xml:{name:"Category"}},Dog:{description:"A representation of a dog",allOf:["#/components/schemas/Pet",{type:"object",properties:{packSize:{type:"integer",format:"int32",description:"The size of the pack the dog is from",default:1,minimum:1}},required:["packSize"]}]},HoneyBee:{description:"A representation of a honey bee",allOf:["#/components/schemas/Pet",{type:"object",properties:{honeyPerDay:{type:"number",description:"Average amount of honey produced per day in ounces",example:3.14}},required:["honeyPerDay"]}]},Id:{type:"integer",format:"int64",readOnly:!0},Order:{type:"object",properties:{id:{description:"Order ID",allOf:["#/components/schemas/Id"]},petId:{description:"Pet ID",allOf:["#/components/schemas/Id"]},quantity:{type:"integer",format:"int32",minimum:1,default:1},shipDate:{description:"Estimated ship date",type:"string",format:"date-time"},status:{type:"string",description:"Order Status",enum:["placed","approved","delivered"]},complete:{description:"Indicates whenever order was completed or not",type:"boolean",default:!1,readOnly:!0},rqeuestId:{description:"Unique Request Id",type:"string",writeOnly:!0}},xml:{name:"Order"}},Pet:{type:"object",required:["name","photoUrls"],discriminator:{propertyName:"petType",mapping:{cat:"#/components/schemas/Cat",dog:"#/components/schemas/Dog",bee:"#/components/schemas/HoneyBee"}},properties:{id:{externalDocs:{description:"Find more info here",url:"https://example.com"},description:"Pet ID",allOf:["#/components/schemas/Id"]},category:{description:"Categories this pet belongs to",allOf:["#/components/schemas/Category"]},name:{description:"The name given to a pet",type:"string",example:"Guru"},photoUrls:{description:"The list of URL to a cute photos featuring pet",type:"array",maxItems:20,xml:{name:"photoUrl",wrapped:!0},items:{type:"string",format:"url"}},friend:{allOf:["#/components/schemas/Pet"]},tags:{description:"Tags attached to the pet",type:"array",minItems:1,xml:{name:"tag",wrapped:!0},items:"#/components/schemas/Tag"},status:{type:"string",description:"Pet status in the store",enum:["available","pending","sold"]},petType:{description:"Type of a pet",type:"string"}},xml:{name:"Pet"}},Tag:{type:"object",properties:{id:{description:"Tag ID",allOf:["#/components/schemas/Id"]},name:{description:"Tag name",type:"string",minLength:1}},xml:{name:"Tag"}},User:{type:"object",properties:{id:"#/components/schemas/Id",pet:{oneOf:["#/components/schemas/Pet","#/components/schemas/Tag"]},username:{description:"User supplied username",type:"string",minLength:4,example:"John78"},firstName:{description:"User first name",type:"string",minLength:1,example:"John"},lastName:{description:"User last name",type:"string",minLength:1,example:"Smith"},email:{description:"User email address",type:"string",format:"email",example:"john.smith@example.com"},password:{type:"string",description:"User password, MUST contain a mix of upper and lower case letters, as well as digits",format:"password",minLength:8,pattern:"/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",example:"drowssaP123"},phone:{description:"User phone number in international format",type:"string",pattern:"/^&#x5C;+(?:[0-9]-?){6,14}[0-9]$/",example:"+1-202-555-0192",nullable:!0},userStatus:{description:"User status",type:"integer",format:"int32"}},xml:{name:"User"}}},requestBodies:{Pet:{content:{"application/json":{schema:{allOf:[{description:"My Pet",title:"Pettie"},"#/components/schemas/Pet"]}},"application/xml":{schema:{type:"object",properties:{name:{type:"string",description:"hooray"}}}}},description:"Pet object that needs to be added to the store",required:!0},UserArray:{content:{"application/json":{schema:{type:"array",items:"#/components/schemas/User"}}},description:"List of user object",required:!0}},securitySchemes:{basic:{type:"http",scheme:"basic"},petstore_auth:{description:`Get access to data while protecting your account credentials.
OAuth2 is also a safer and more secure way to give you access.
`,type:"oauth2",flows:{implicit:{authorizationUrl:"http://petstore.swagger.io/api/oauth/dialog",scopes:{"write:pets":"modify pets in your account","read:pets":"read your pets"}}}},api_key:{description:"For this sample, you can use the api key `special-key` to test the authorization filters.\n",type:"apiKey",name:"api_key",in:"header"}},examples:{Order:{value:{quantity:"1,",shipDate:"2018-10-19T16:46:45Z,",status:"placed,",complete:!1}}}}},ae={class:"content-container"},he=J({__name:"petstore-extended",setup(oe){const h=X(),C=Z(),{$openapidoc:g,$openapidocBus:O,$openapidocRef:y}=se(),f=q(""),A=q(0),v=q((re.path??"").toString()),p=q(i??{}),b=a(()=>"petstore-extended"),r=a(()=>h.params.type.toString()),T=a(()=>(h.params.mathod??"default").toString()),x=a(()=>r.value==="info"),_=a(()=>r.value==="auth"),w=a(()=>r.value==="components"),u=a(()=>g.currentLocale());y.setComponents(i.components),y.setDefinitions(i.definitions),y.setDocPath(v.value),y.setFile(b.value);const o=a(()=>{const t={...i.paths};if(!t)return null;for(const n in t){let s=n.toString();if(s.startsWith("/")&&(s=s.substring(1)),s.endsWith("/")&&(s=s.substring(-1)),s=s.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),s===T.value)return f.value=n.toString(),t[n]??null}return null}),c=a(()=>{const t={...i.webhooks};if(!t)return null;for(const n in t){let s=n.toString();if(s.startsWith("/")&&(s=s.substring(1)),s.endsWith("/")&&(s=s.substring(-1)),s=s.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),s===T.value)return f.value=n.toString(),t[n][r.value]??null}return null}),l=a(()=>o.value?o.value[r.value]??null:null),U=a(()=>o.value?o.value.parameters??null:null),B=a(()=>{const t=g.currentLocale()??"";return x.value?"[petstore-extended] - Info Docs":_.value?"[petstore-extended] - Authorization":w.value?"[petstore-extended] - Components Docs":l.value?"[petstore-extended] - "+(l.value["x-summary-"+t.value]||l.value.summary||""):""}),L=a(()=>{const t=g.currentLocale()??"";return x.value?"[petstore-extended] - Info Docs":_.value?"[petstore-extended] - Authorization":w.value?"[petstore-extended] - Components Docs":l.value&&(l.value["x-description-"+t.value]||l.value.description)||""});ne({title:B.value,meta:[{name:"description",content:L.value}],htmlAttrs:{lang:u.value},bodyAttrs:{class:"oapi"}});const D=a(()=>{if(o.value){if(o.value.servers&&o.value.servers[0])return o.value.servers[0].url??null;if(o.value[r.value]&&o.value[r.value].servers&&o.value[r.value].servers[0])return o.value[r.value].servers[0].url??null}if(c.value){if(c.value.servers&&c.value.servers[0])return c.value.servers[0].url??null;if(c.value[r.value]&&c.value[r.value].servers&&c.value[r.value].servers[0])return c.value[r.value].servers[0].url??null}let t=A.value;if(t>0&&i.servers&&!i.servers[t]&&(t=0),!i.servers||!i.servers[t])return"";if(i.servers[t].variables){const n=Object.values(i.servers[t].variables)??[];if(n&&n.length)return n[0].default}return i.servers[t].url??""});function k(t){A.value=t}function R(){var n;(((n=document.querySelector(".content-container"))==null?void 0:n.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(s=>{s.addEventListener("click",j=>{const I=s.getAttribute("id"),P=window.location.origin+window.location.pathname+"#"+I;g.copyToClipboard(P,j,!1),C.push({path:h.path,hash:"#"+I}),setTimeout(()=>{s.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function F(){if(h.hash)return;const t=document.querySelector(".oapi-content");t&&(t.scrollTop=0)}return Y(()=>{O.$on("changeServer",k),F(),R()}),Q(()=>{O.$off("changeServer",k)}),(t,n)=>{const s=N,j=W,I=M,P=H,$=G,E=V,z=K;return d(),ee("div",ae,[e(x)&&e(p).info?(d(),m(s,{key:0,info:e(p).info,servers:e(p).servers,"current-locale":e(u)},null,8,["info","servers","current-locale"])):e(_)&&e(p).components?(d(),m(j,{key:1,components:e(p).components,"current-locale":e(u)},null,8,["components","current-locale"])):e(w)&&e(p).components?(d(),m(I,{key:2,components:e(p).components,"current-locale":e(u)},null,8,["components","current-locale"])):e(l)?(d(),m(P,{key:3,route:e(l),"current-locale":e(u),method:e(r),components:e(p).components,url:e(f),path_doc:e(v),file:e(b),server:e(D),"sub-params":e(U)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):e(c)?(d(),m(P,{key:4,route:e(c),"current-locale":e(u),method:e(r),components:e(p).components,url:e(f),path_doc:e(v),file:e(b),server:e(D),"sub-params":e(U)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(d(),m($,{key:5})),S(z,null,{default:te(()=>[S(E,{"current-locale":e(u),doc:e(p),path:e(v),file:e(b)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{he as default};
