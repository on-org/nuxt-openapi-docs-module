import{_ as U,a as z,b as F,c as Q,d as H,e as M}from"./DCKnGQaB.js";import{_ as G}from"./lE6gnZBK.js";import{g as J,i as K,k as X,r as A,l as r,h as Y,m as Z,o as h,c as ss,u as s,n as v,b as T,w as es,q as ns}from"./DfEkFS0t.js";import{u as as}from"./C8P-NPbi.js";import{d as ts}from"./FE-UY7oi.js";import"./DiXmIcGb.js";import"./BBe_hJkb.js";const o={openapi:"3.0.2",info:{version:"1.0",title:"API Server templating using variables",description:`<p>Various ways to define API servers in the spec including variables</p>
<pre><code class="hljs language-yaml">  <span class="hljs-attr">servers:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;http://example.com/api&#x27;</span>
      <span class="hljs-attr">description:</span> <span class="hljs-string">Test</span> <span class="hljs-string">server</span> <span class="hljs-string">(just</span> <span class="hljs-string">for</span> <span class="hljs-string">example)</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;/api&#x27;</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;{protocol}://dev.com/api/{version}&#x27;</span>
      <span class="hljs-attr">variables:</span>
        <span class="hljs-attr">protocol:</span>
          <span class="hljs-attr">description:</span> <span class="hljs-string">Protocol</span> <span class="hljs-string">(with</span> <span class="hljs-string">enum)</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">https</span>
          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">http</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">https</span>
        <span class="hljs-attr">version:</span>
          <span class="hljs-attr">description:</span> <span class="hljs-string">API</span> <span class="hljs-string">Version</span> <span class="hljs-string">(without</span> <span class="hljs-string">enum)</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">v1</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">url:</span> <span class="hljs-string">&#x27;{protocol}://{environment}.example.com/{version}&#x27;</span>
      <span class="hljs-attr">variables:</span>
        <span class="hljs-attr">environment:</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">api</span>    <span class="hljs-comment"># Production server</span>
          <span class="hljs-attr">description:</span> <span class="hljs-string">&gt;
            Server choices:
            * \`api\` Production (this is the default).
            * \`api.qa\` QA server.
            * \`api.dev\` Development server.
</span>          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">api</span>      <span class="hljs-comment"># Production server</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">api.dev</span>  <span class="hljs-comment"># Development server</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">api.qa</span>   <span class="hljs-comment"># Testing server</span>
        <span class="hljs-attr">protocol:</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">https</span>
          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">http</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">https</span>
        <span class="hljs-attr">version:</span>
          <span class="hljs-attr">default:</span> <span class="hljs-string">v2</span>
          <span class="hljs-attr">enum:</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">v1</span>
            <span class="hljs-bullet">-</span> <span class="hljs-string">v2</span>
</code></pre>`},servers:[{url:"http://example.com/api",description:"Test server (just for example)"},{url:"{protocol}://dev.com/api/{version}",variables:{protocol:{description:"Protocol (with enum)",default:"https",enum:["http","https"]},version:{description:"API Version (without enum)",default:"v1"}}},{url:"{protocol}://{environment}.example.com/{version}",variables:{environment:{default:"api",description:"Server choices:\n * `api` Production (this is the default).\n * `api.qa` QA server.\n * `api.dev` Development server.\n",enum:["api","api.dev","api.qa"]},protocol:{default:"https",enum:["http","https"]},version:{default:"v2",enum:["v1","v2"]}}}],paths:{"/api-server-template":{get:{summary:"Dynamic API Server.",description:"Uses API server template string and variables which can be used to generatea a desired API server url -  The selected and computed API Server URL should be shown against `API SERVER`.",responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",properties:{name:{description:"Person Name",type:"string"},age:{description:"Person Age",type:"integer"}}}}}}},tags:["other"]}}},tags:{}},rs={class:"content-container"},ms=J({__name:"server",setup(ls){const m=K(),L=X(),{$openapidoc:d,$openapidocBus:w,$openapidocRef:f}=ns(),j=A(""),I=A(0),_=A((ts.path??"").toString()),p=A(o??{}),g=r(()=>"server"),t=r(()=>m.params.type.toString()),C=r(()=>(m.params.mathod??"default").toString()),P=r(()=>t.value==="info"),y=r(()=>t.value==="auth"),S=r(()=>t.value==="components"),u=r(()=>d.currentLocale());f.setComponents(o.components),f.setDefinitions(o.definitions),f.setDocPath(_.value),f.setFile(g.value);const l=r(()=>{const e={...o.paths};if(!e)return null;for(const a in e){let n=a.toString();if(n.startsWith("/")&&(n=n.substring(1)),n.endsWith("/")&&(n=n.substring(-1)),n=n.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),n===C.value)return j.value=a.toString(),e[a]??null}return null}),c=r(()=>{const e={...o.webhooks};if(!e)return null;for(const a in e){let n=a.toString();if(n.startsWith("/")&&(n=n.substring(1)),n.endsWith("/")&&(n=n.substring(-1)),n=n.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),n===C.value)return j.value=a.toString(),e[a][t.value]??null}return null}),i=r(()=>l.value?l.value[t.value]??null:null),D=r(()=>l.value?l.value.parameters??null:null),V=r(()=>{const e=d.currentLocale()??"";return P.value?"[server] - Info Docs":y.value?"[server] - Authorization":S.value?"[server] - Components Docs":i.value?"[server] - "+(i.value["x-summary-"+e.value]||i.value.summary||""):""}),$=r(()=>{const e=d.currentLocale()??"";return P.value?"[server] - Info Docs":y.value?"[server] - Authorization":S.value?"[server] - Components Docs":i.value&&(i.value["x-description-"+e.value]||i.value.description)||""});as({title:V.value,meta:[{name:"description",content:$.value}],htmlAttrs:{lang:u.value},bodyAttrs:{class:"oapi"}});const q=r(()=>{if(l.value){if(l.value.servers&&l.value.servers[0])return l.value.servers[0].url??null;if(l.value[t.value]&&l.value[t.value].servers&&l.value[t.value].servers[0])return l.value[t.value].servers[0].url??null}if(c.value){if(c.value.servers&&c.value.servers[0])return c.value.servers[0].url??null;if(c.value[t.value]&&c.value[t.value].servers&&c.value[t.value].servers[0])return c.value[t.value].servers[0].url??null}let e=I.value;if(e>0&&o.servers&&!o.servers[e]&&(e=0),!o.servers||!o.servers[e])return"";if(o.servers[e].variables){const a=Object.values(o.servers[e].variables)??[];if(a&&a.length)return a[0].default}return o.servers[e].url??""});function R(e){I.value=e}function B(){var a;(((a=document.querySelector(".content-container"))==null?void 0:a.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(n=>{n.addEventListener("click",k=>{const b=n.getAttribute("id"),x=window.location.origin+window.location.pathname+"#"+b;d.copyToClipboard(x,k,!1),L.push({path:m.path,hash:"#"+b}),setTimeout(()=>{n.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function E(){if(m.hash)return;const e=document.querySelector(".oapi-content");e&&(e.scrollTop=0)}return Y(()=>{w.$on("changeServer",R),E(),B()}),Z(()=>{w.$off("changeServer",R)}),(e,a)=>{const n=U,k=z,b=F,x=Q,N=M,O=H,W=G;return h(),ss("div",rs,[s(P)&&s(p).info?(h(),v(n,{key:0,info:s(p).info,servers:s(p).servers,"current-locale":s(u)},null,8,["info","servers","current-locale"])):s(y)&&s(p).components?(h(),v(k,{key:1,components:s(p).components,"current-locale":s(u)},null,8,["components","current-locale"])):s(S)&&s(p).components?(h(),v(b,{key:2,components:s(p).components,"current-locale":s(u)},null,8,["components","current-locale"])):s(i)?(h(),v(x,{key:3,route:s(i),"current-locale":s(u),method:s(t),components:s(p).components,url:s(j),path_doc:s(_),file:s(g),server:s(q),"sub-params":s(D)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):s(c)?(h(),v(x,{key:4,route:s(c),"current-locale":s(u),method:s(t),components:s(p).components,url:s(j),path_doc:s(_),file:s(g),server:s(q),"sub-params":s(D)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(h(),v(N,{key:5})),T(W,null,{default:es(()=>[T(O,{"current-locale":s(u),doc:s(p),path:s(_),file:s(g)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{ms as default};
