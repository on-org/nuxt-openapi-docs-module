import{_ as E,a as V,b as z,c as K,d as H,e as M}from"./BBKxxenp.js";import{_ as G}from"./Ctz0EXd-.js";import{f as J,h as Q,j as X,k as Y,r as k,l,g as Z,m as ss,o as m,c as ns,u as s,n as h,b as D,w as as}from"./DrCf4G5v.js";import{u as ts}from"./CtmrR_TU.js";import{d as es}from"./BreU9qJo.js";import"./CXLPdVYg.js";import"./Bq3GVmQU.js";const o={openapi:"3.0.0",info:{title:"Various ways to upload files (binary content)",version:"1.0.0"},paths:{"/upload-single-file":{post:{tags:["File Upload"],summary:"Uploads single file using form-data",description:`<pre><code class="hljs language-yaml"><span class="hljs-string">/upload-single-file:</span>
  <span class="hljs-attr">post:</span>
    <span class="hljs-attr">summary:</span> <span class="hljs-string">Uploads</span> <span class="hljs-string">single</span> <span class="hljs-string">file</span> <span class="hljs-string">using</span> <span class="hljs-string">form-data</span>
    <span class="hljs-attr">requestBody:</span>
      <span class="hljs-attr">content:</span>
        <span class="hljs-attr">multipart/form-data:</span>
          <span class="hljs-attr">schema:</span>
            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span>
            <span class="hljs-attr">properties:</span>
              <span class="hljs-attr">filename:</span>
                <span class="hljs-attr">type:</span> <span class="hljs-string">string</span>
                <span class="hljs-attr">format:</span> <span class="hljs-string">binary</span>      
</code></pre>`,requestBody:{content:{"multipart/form-data":{schema:{type:"object",properties:{name:{type:"string"},photo:{type:"string",format:"binary"}}}}}},responses:{200:{summary:"OK"}}}},"/upload-multiple-file":{post:{tags:["File Upload"],summary:"Uploads multiple file using form-data and type as &#x27;array&#x27;",description:`<pre><code class="hljs language-yaml"><span class="hljs-string">/upload-multiple-file:</span>
  <span class="hljs-attr">post:</span>
    <span class="hljs-attr">summary:</span> <span class="hljs-string">Uploads</span> <span class="hljs-string">multiple</span> <span class="hljs-string">file</span> <span class="hljs-string">using</span> <span class="hljs-string">form-data</span> <span class="hljs-string">and</span> <span class="hljs-string">type</span> <span class="hljs-string">as</span> <span class="hljs-string">&#x27;array&#x27;</span>
    <span class="hljs-attr">requestBody:</span>
      <span class="hljs-attr">content:</span>
        <span class="hljs-attr">multipart/form-data:</span>
          <span class="hljs-attr">schema:</span>
            <span class="hljs-attr">type:</span> <span class="hljs-string">object</span>
            <span class="hljs-attr">properties:</span>
              <span class="hljs-attr">filename:</span>
                <span class="hljs-attr">type:</span> <span class="hljs-string">array</span>
                <span class="hljs-attr">items:</span>
                  <span class="hljs-attr">type:</span> <span class="hljs-string">string</span>
                  <span class="hljs-attr">format:</span> <span class="hljs-string">binary</span>      
</code></pre>`,requestBody:{content:{"multipart/form-data":{schema:{type:"object",properties:{name:{type:"string"},picture:{type:"array",items:{type:"string",format:"binary"}}}}}}},responses:{200:{description:"OK"}}}},"/upload-using-request-body":{post:{tags:["File Upload"],summary:"Uploads single file using request-body content-type as application/octet-stream",description:`<pre><code class="hljs language-yaml"><span class="hljs-string">/upload-using-request-body:</span>
  <span class="hljs-attr">post:</span>
    <span class="hljs-attr">summary:</span> <span class="hljs-string">Uploads</span> <span class="hljs-string">single</span> <span class="hljs-string">file</span> <span class="hljs-string">using</span> <span class="hljs-string">request-body</span> <span class="hljs-string">content-type</span> <span class="hljs-string">as</span> <span class="hljs-string">application/octet-stream</span>
    <span class="hljs-attr">requestBody:</span>
      <span class="hljs-attr">content:</span>
        <span class="hljs-attr">application/octet-stream:</span>
          <span class="hljs-attr">schema:</span>
            <span class="hljs-attr">type:</span> <span class="hljs-string">string</span>
            <span class="hljs-attr">format:</span> <span class="hljs-string">binary</span>
</code></pre>`,requestBody:{content:{"application/octet-stream":{schema:{type:"string",format:"binary"}}}},responses:{200:{description:"successful operation"}}}}},tags:{}},ls={class:"content-container"},ds=J({__name:"file-upload",setup(rs){const d=Q(),I=X(),{$openapidoc:f,$openapidocBus:B,$openapidocRef:v}=Y(),g=k(""),w=k(0),j=k((es.path??"").toString()),p=k(o??{}),_=l(()=>"file-upload"),e=l(()=>d.params.type.toString()),C=l(()=>(d.params.mathod??"default").toString()),x=l(()=>e.value==="info"),S=l(()=>e.value==="auth"),q=l(()=>e.value==="components"),u=l(()=>f.currentLocale());v.setComponents(o.components),v.setDefinitions(o.definitions),v.setDocPath(j.value),v.setFile(_.value);const r=l(()=>{const n={...o.paths};if(!n)return null;for(const t in n){let a=t.toString();if(a.startsWith("/")&&(a=a.substring(1)),a.endsWith("/")&&(a=a.substring(-1)),a=a.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),a===C.value)return g.value=t.toString(),n[t]??null}return null}),c=l(()=>{const n={...o.webhooks};if(!n)return null;for(const t in n){let a=t.toString();if(a.startsWith("/")&&(a=a.substring(1)),a.endsWith("/")&&(a=a.substring(-1)),a=a.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),a===C.value)return g.value=t.toString(),n[t][e.value]??null}return null}),i=l(()=>r.value?r.value[e.value]??null:null),U=l(()=>r.value?r.value.parameters??null:null),$=l(()=>{const n=f.currentLocale()??"";return x.value?"[file-upload] - Info Docs":S.value?"[file-upload] - Authorization":q.value?"[file-upload] - Components Docs":i.value?"[file-upload] - "+(i.value["x-summary-"+n.value]||i.value.summary||""):""}),F=l(()=>{const n=f.currentLocale()??"";return x.value?"[file-upload] - Info Docs":S.value?"[file-upload] - Authorization":q.value?"[file-upload] - Components Docs":i.value&&(i.value["x-description-"+n.value]||i.value.description)||""});ts({title:$.value,meta:[{name:"description",content:F.value}],htmlAttrs:{lang:u.value},bodyAttrs:{class:"oapi"}});const P=l(()=>{if(r.value){if(r.value.servers&&r.value.servers[0])return r.value.servers[0].url??null;if(r.value[e.value]&&r.value[e.value].servers&&r.value[e.value].servers[0])return r.value[e.value].servers[0].url??null}if(c.value){if(c.value.servers&&c.value.servers[0])return c.value.servers[0].url??null;if(c.value[e.value]&&c.value[e.value].servers&&c.value[e.value].servers[0])return c.value[e.value].servers[0].url??null}let n=w.value;if(n>0&&o.servers&&!o.servers[n]&&(n=0),!o.servers||!o.servers[n])return"";if(o.servers[n].variables){const t=Object.values(o.servers[n].variables)??[];if(t&&t.length)return t[0].default}return o.servers[n].url??""});function O(n){w.value=n}function L(){var t;(((t=document.querySelector(".content-container"))==null?void 0:t.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(a=>{a.addEventListener("click",A=>{const y=a.getAttribute("id"),b=window.location.origin+window.location.pathname+"#"+y;f.copyToClipboard(b,A,!1),I.push({path:d.path,hash:"#"+y}),setTimeout(()=>{a.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function R(){if(d.hash)return;const n=document.querySelector(".oapi-content");n&&(n.scrollTop=0)}return Z(()=>{B.$on("changeServer",O),R(),L()}),ss(()=>{B.$off("changeServer",O)}),(n,t)=>{const a=E,A=V,y=z,b=K,W=M,N=H,T=G;return m(),ns("div",ls,[s(x)&&s(p).info?(m(),h(a,{key:0,info:s(p).info,servers:s(p).servers,"current-locale":s(u)},null,8,["info","servers","current-locale"])):s(S)&&s(p).components?(m(),h(A,{key:1,components:s(p).components,"current-locale":s(u)},null,8,["components","current-locale"])):s(q)&&s(p).components?(m(),h(y,{key:2,components:s(p).components,"current-locale":s(u)},null,8,["components","current-locale"])):s(i)?(m(),h(b,{key:3,route:s(i),"current-locale":s(u),method:s(e),components:s(p).components,url:s(g),path_doc:s(j),file:s(_),server:s(P),"sub-params":s(U)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):s(c)?(m(),h(b,{key:4,route:s(c),"current-locale":s(u),method:s(e),components:s(p).components,url:s(g),path_doc:s(j),file:s(_),server:s(P),"sub-params":s(U)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(m(),h(W,{key:5})),D(T,null,{default:as(()=>[D(N,{"current-locale":s(u),doc:s(p),path:s(j),file:s(_)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{ds as default};
