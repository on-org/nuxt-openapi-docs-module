import{_ as $,a as z,b as M,c as V,d as K,e as X}from"./hAKOVsNa.js";import{_ as G}from"./DjNn3e3j.js";import{g as H,i as Y,k as J,r as w,l as n,h as Q,m as Z,o as l,c as ee,u as e,n as m,b as O,w as te,q as se}from"./D0_sVEes.js";import{u as re}from"./B1AvujwT.js";import{d as oe}from"./DqUA8Kuq.js";import"./DNulFo3o.js";import"./DUk9io8q.js";const i={openapi:"3.0.0",info:{description:`<p>This is a sample local Petstore server.  You can find out more about Swagger at <a href="http://swagger.io">http://swagger.io</a> or on <a href="http://swagger.io/irc/">irc.freenode.net, #swagger</a>.  For this sample, you can use the api key <code>special-key</code> to test the authorization filters.</p>
`,version:"1.0.0",title:"Swagger Petstore",termsOfService:"http://swagger.io/terms/",contact:{email:"apiteam@swagger.io"},license:{name:"Apache 2.0",url:"http://www.apache.org/licenses/LICENSE-2.0.html"}},tags:{pet:{name:"pet",description:"Everything about your Pets",externalDocs:{description:"Find out more",url:"http://swagger.io"}},store:{name:"store",description:"Access to Petstore orders"},user:{name:"user",description:"Operations about user",externalDocs:{description:"Find out more about our store",url:"http://swagger.io"}}},paths:{"/pet":{post:{tags:["pet"],summary:"Add a new pet to the store",description:"",operationId:"addPet",requestBody:"#/components/requestBodies/Pet",responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}]},put:{tags:["pet"],summary:"Update an existing pet",description:"",operationId:"updatePet",requestBody:"#/components/requestBodies/Pet",responses:{400:{description:"Invalid ID supplied"},404:{description:"Pet not found"},405:{description:"Validation exception"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/findByStatus":{get:{tags:["pet"],summary:"Finds Pets by status",description:"Multiple status values can be provided with comma separated strings",operationId:"findPetsByStatus",parameters:[{name:"status",in:"query",description:"Status values that need to be considered for filter",required:!0,explode:!0,schema:{type:"array",items:{type:"string",enum:["available","pending","sold"],default:"available"}}}],responses:{200:{description:"successful operation",content:{"application/xml":{schema:{type:"array",items:"#/components/schemas/Pet"}},"application/json":{schema:{type:"array",items:"#/components/schemas/Pet"}}}},400:{description:"Invalid status value"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/findByTags":{get:{tags:["pet"],summary:"Finds Pets by tags",description:"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",operationId:"findPetsByTags",parameters:[{name:"tags",in:"query",description:"Tags to filter by",required:!0,explode:!0,schema:{type:"array",items:{type:"string"}}}],responses:{200:{description:"successful operation",content:{"application/xml":{schema:{type:"array",items:"#/components/schemas/Pet"}},"application/json":{schema:{type:"array",items:"#/components/schemas/Pet"}}}},400:{description:"Invalid tag value"}},security:[{petstore_auth:["write:pets","read:pets"]}],deprecated:!0}},"/pet/{petId}":{get:{tags:["pet"],summary:"Find pet by ID",description:"Returns a single pet",operationId:"getPetById",parameters:[{name:"petId",in:"path",description:"ID of pet to return",required:!0,schema:{type:"integer",format:"int64"}}],responses:{200:{description:"successful operation",content:{"application/xml":{schema:"#/components/schemas/Pet"},"application/json":{schema:"#/components/schemas/Pet"}}},400:{description:"Invalid ID supplied"},404:{description:"Pet not found"}},security:[{api_key:[]}]},post:{tags:["pet"],summary:"Updates a pet in the store with form data",description:"",operationId:"updatePetWithForm",parameters:[{name:"petId",in:"path",description:"ID of pet that needs to be updated",required:!0,schema:{type:"integer",format:"int64"}}],requestBody:{content:{"application/x-www-form-urlencoded":{schema:{type:"object",properties:{name:{description:"Updated name of the pet",type:"string"},status:{description:"Updated status of the pet",type:"string"}}}}}},responses:{405:{description:"Invalid input"}},security:[{petstore_auth:["write:pets","read:pets"]}]},delete:{tags:["pet"],summary:"Deletes a pet",description:"",operationId:"deletePet",parameters:[{name:"api_key",in:"header",required:!1,schema:{type:"string"}},{name:"petId",in:"path",description:"Pet id to delete",required:!0,schema:{type:"integer",format:"int64"}}],responses:{400:{description:"Invalid ID supplied"},404:{description:"Pet not found"}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/pet/{petId}/uploadImage":{post:{tags:["pet"],summary:"uploads an image",description:"",operationId:"uploadFile",parameters:[{name:"petId",in:"path",description:"ID of pet to update",required:!0,schema:{type:"integer",format:"int64"}}],requestBody:{content:{"multipart/form-data":{schema:{type:"object",properties:{additionalMetadata:{description:"Additional data to pass to server",type:"string"},file:{description:"file to upload",type:"string",format:"binary"}}}}}},responses:{200:{description:"successful operation",content:{"application/json":{schema:"#/components/schemas/ApiResponse"}}}},security:[{petstore_auth:["write:pets","read:pets"]}]}},"/store/inventory":{get:{tags:["store"],summary:"Returns pet inventories by status",description:"Returns a map of status codes to quantities",operationId:"getInventory",responses:{200:{description:"successful operation",content:{"application/json":{schema:{type:"object",additionalProperties:{type:"integer",format:"int32"}}}}}},security:[{api_key:[]}]}},"/store/order":{post:{tags:["store"],summary:"Place an order for a pet",description:"",operationId:"placeOrder",requestBody:{content:{"application/json":{schema:"#/components/schemas/Order"}},description:"order placed for purchasing the pet",required:!0},responses:{200:{description:"successful operation",content:{"application/xml":{schema:"#/components/schemas/Order"},"application/json":{schema:"#/components/schemas/Order"}}},400:{description:"Invalid Order"}}}},"/store/order/{orderId}":{get:{tags:["store"],summary:"Find purchase order by ID",description:"For valid response try integer IDs with value >= 1 and &lt;= 10. Other values will generated exceptions",operationId:"getOrderById",parameters:[{name:"orderId",in:"path",description:"ID of pet that needs to be fetched",required:!0,schema:{type:"integer",format:"int64",minimum:1,maximum:10}}],responses:{200:{description:"successful operation",content:{"application/xml":{schema:"#/components/schemas/Order"},"application/json":{schema:"#/components/schemas/Order"}}},400:{description:"Invalid ID supplied"},404:{description:"Order not found"}}},delete:{tags:["store"],summary:"Delete purchase order by ID",description:"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors",operationId:"deleteOrder",parameters:[{name:"orderId",in:"path",description:"ID of the order that needs to be deleted",required:!0,schema:{type:"integer",format:"int64",minimum:1}}],responses:{400:{description:"Invalid ID supplied"},404:{description:"Order not found"}}}},"/user":{post:{tags:["user"],summary:"Create user",description:"This can only be done by the logged in user.",operationId:"createUser",requestBody:{content:{"application/json":{schema:"#/components/schemas/User"}},description:"Created user object",required:!0},responses:{default:{description:"successful operation"}}}},"/user/createWithArray":{post:{tags:["user"],summary:"Creates list of users with given input array",description:"",operationId:"createUsersWithArrayInput",requestBody:"#/components/requestBodies/UserArray",responses:{default:{description:"successful operation"}}}},"/user/createWithList":{post:{tags:["user"],summary:"Creates list of users with given input array",description:"",operationId:"createUsersWithListInput",requestBody:"#/components/requestBodies/UserArray",responses:{default:{description:"successful operation"}}}},"/user/login":{get:{tags:["user"],summary:"Logs user into the system",description:"",operationId:"loginUser",parameters:[{name:"username",in:"query",description:"The user name for login",required:!0,schema:{type:"string"}},{name:"password",in:"query",description:"The password for login in clear text",required:!0,schema:{type:"string"}}],responses:{200:{description:"successful operation",headers:{"X-Rate-Limit":{description:"calls per hour allowed by the user",schema:{type:"integer",format:"int32"}},"X-Expires-After":{description:"date in UTC when token expires",schema:{type:"string",format:"date-time"}}},content:{"application/xml":{schema:{type:"string"}},"application/json":{schema:{type:"string"}}}},400:{description:"Invalid username/password supplied"}}}},"/user/logout":{get:{tags:["user"],summary:"Logs out current logged in user session",description:"",operationId:"logoutUser",responses:{default:{description:"successful operation"}}}},"/user/{username}":{get:{tags:["user"],summary:"Get user by user name",description:"",operationId:"getUserByName",parameters:[{name:"username",in:"path",description:"The name that needs to be fetched. Use user1 for testing. ",required:!0,schema:{type:"string"}}],responses:{200:{description:"successful operation",content:{"application/xml":{schema:"#/components/schemas/User"},"application/json":{schema:"#/components/schemas/User"}}},400:{description:"Invalid username supplied"},404:{description:"User not found"}}},put:{tags:["user"],summary:"Updated user",description:"This can only be done by the logged in user.",operationId:"updateUser",parameters:[{name:"username",in:"path",description:"name that need to be updated",required:!0,schema:{type:"string"}}],requestBody:{content:{"application/json":{schema:"#/components/schemas/User"}},description:"Updated user object",required:!0},responses:{400:{description:"Invalid user supplied"},404:{description:"User not found"}}},delete:{tags:["user"],summary:"Delete user",description:"This can only be done by the logged in user.",operationId:"deleteUser",parameters:[{name:"username",in:"path",description:"The name that needs to be deleted",required:!0,schema:{type:"string"}}],responses:{400:{description:"Invalid username supplied"},404:{description:"User not found"}}}}},externalDocs:{description:"Find out more about Swagger",url:"http://swagger.io"},servers:[{url:"https://petstore.swagger.io/v2"},{url:"http://petstore.swagger.io/v2"}],components:{requestBodies:{UserArray:{content:{"application/json":{schema:{type:"array",items:"#/components/schemas/User"}}},description:"List of user object",required:!0},Pet:{content:{"application/json":{schema:"#/components/schemas/Pet"},"application/xml":{schema:"#/components/schemas/Pet"}},description:"Pet object that needs to be added to the store",required:!0}},securitySchemes:{petstore_auth:{type:"oauth2",flows:{implicit:{authorizationUrl:"https://petstore.swagger.io/oauth/authorize",scopes:{"write:pets":"modify pets in your account","read:pets":"read your pets"}}}},api_key:{type:"apiKey",name:"api_key",in:"header"},api_key2:{type:"apiKey",name:"api_key2",in:"header"}},schemas:{Order:{type:"object",properties:{id:{type:"integer",format:"int64"},petId:{type:"integer",format:"int64"},quantity:{type:"integer",format:"int32"},shipDate:{type:"string",format:"date-time"},status:{type:"string",description:"Order Status",enum:["placed","approved","delivered"]},complete:{type:"boolean",default:!1}},xml:{name:"Order",namespace:"https://rapidocweb.com"}},User:{type:"object",properties:{id:{type:"integer",format:"int64"},username:{type:"string"},firstName:{type:"string"},lastName:{type:"string"},email:{type:"string"},password:{type:"string"},phone:{type:"string"},userStatus:{type:"integer",format:"int32",description:"User Status"}},xml:{name:"User",namespace:"https://rapidocweb.com"}},Category:{type:"object",properties:{id:{type:"integer",format:"int64"},name:{type:"string"}},xml:{name:"Category",namespace:"https://rapidocweb.com"}},Tag:{type:"object",properties:{id:{type:"integer",format:"int64"},name:{type:"string"}},xml:{name:"Tag",namespace:"https://rapidocweb.com"}},Pet:{type:"object",required:["id","name","photoUrls"],properties:{id:{type:"integer",format:"int64"},category:"#/components/schemas/Category",name:{type:"string",example:"doggie"},photoUrls:{type:"array",xml:{name:"photoUrl",wrapped:!0},items:{type:"string"}},tags:{type:"array",xml:{name:"tag",wrapped:!0},items:"#/components/schemas/Tag"},status:{type:"string",description:"pet status in the store",enum:["available","pending","sold"]}},xml:{name:"Pet",namespace:"https://rapidocweb.com"}},ApiResponse:{type:"object",properties:{code:{type:"integer",format:"int32"},type:{type:"string"},message:{type:"string"}}}}}},ne={class:"content-container"},he=H({__name:"petstore",setup(ae){const h=Y(),C=J(),{$openapidoc:y,$openapidocBus:j,$openapidocRef:g}=se(),f=w(""),D=w(0),v=w((oe.path??"").toString()),p=w(i??{}),_=n(()=>"petstore"),o=n(()=>h.params.type.toString()),S=n(()=>(h.params.mathod??"default").toString()),q=n(()=>o.value==="info"),x=n(()=>o.value==="auth"),P=n(()=>o.value==="components"),d=n(()=>y.currentLocale());g.setComponents(i.components),g.setDefinitions(i.definitions),g.setDocPath(v.value),g.setFile(_.value);const a=n(()=>{const t={...i.paths};if(!t)return null;for(const r in t){let s=r.toString();if(s.startsWith("/")&&(s=s.substring(1)),s.endsWith("/")&&(s=s.substring(-1)),s=s.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),s===S.value)return f.value=r.toString(),t[r]??null}return null}),c=n(()=>{const t={...i.webhooks};if(!t)return null;for(const r in t){let s=r.toString();if(s.startsWith("/")&&(s=s.substring(1)),s.endsWith("/")&&(s=s.substring(-1)),s=s.replace(/[/\\.?+=&{}]/gumi,"_").replace(/__+/,"_"),s===S.value)return f.value=r.toString(),t[r][o.value]??null}return null}),u=n(()=>a.value?a.value[o.value]??null:null),k=n(()=>a.value?a.value.parameters??null:null),T=n(()=>{const t=y.currentLocale()??"";return q.value?"[petstore] - Info Docs":x.value?"[petstore] - Authorization":P.value?"[petstore] - Components Docs":u.value?"[petstore] - "+(u.value["x-summary-"+t.value]||u.value.summary||""):""}),F=n(()=>{const t=y.currentLocale()??"";return q.value?"[petstore] - Info Docs":x.value?"[petstore] - Authorization":P.value?"[petstore] - Components Docs":u.value&&(u.value["x-description-"+t.value]||u.value.description)||""});re({title:T.value,meta:[{name:"description",content:F.value}],htmlAttrs:{lang:d.value},bodyAttrs:{class:"oapi"}});const A=n(()=>{if(a.value){if(a.value.servers&&a.value.servers[0])return a.value.servers[0].url??null;if(a.value[o.value]&&a.value[o.value].servers&&a.value[o.value].servers[0])return a.value[o.value].servers[0].url??null}if(c.value){if(c.value.servers&&c.value.servers[0])return c.value.servers[0].url??null;if(c.value[o.value]&&c.value[o.value].servers&&c.value[o.value].servers[0])return c.value[o.value].servers[0].url??null}let t=D.value;if(t>0&&i.servers&&!i.servers[t]&&(t=0),!i.servers||!i.servers[t])return"";if(i.servers[t].variables){const r=Object.values(i.servers[t].variables)??[];if(r&&r.length)return r[0].default}return i.servers[t].url??""});function B(t){D.value=t}function L(){var r;(((r=document.querySelector(".content-container"))==null?void 0:r.querySelectorAll("h1[id], h2[id], h3[id], h4[id]"))??[]).forEach(s=>{s.addEventListener("click",U=>{const b=s.getAttribute("id"),I=window.location.origin+window.location.pathname+"#"+b;y.copyToClipboard(I,U,!1),C.push({path:h.path,hash:"#"+b}),setTimeout(()=>{s.scrollIntoView({behavior:"smooth",block:"start"})},100)})})}function R(){if(h.hash)return;const t=document.querySelector(".oapi-content");t&&(t.scrollTop=0)}return Q(()=>{j.$on("changeServer",B),R(),L()}),Z(()=>{j.$off("changeServer",B)}),(t,r)=>{const s=$,U=z,b=M,I=V,W=X,N=K,E=G;return l(),ee("div",ne,[e(q)&&e(p).info?(l(),m(s,{key:0,info:e(p).info,servers:e(p).servers,"current-locale":e(d)},null,8,["info","servers","current-locale"])):e(x)&&e(p).components?(l(),m(U,{key:1,components:e(p).components,"current-locale":e(d)},null,8,["components","current-locale"])):e(P)&&e(p).components?(l(),m(b,{key:2,components:e(p).components,"current-locale":e(d)},null,8,["components","current-locale"])):e(u)?(l(),m(I,{key:3,route:e(u),"current-locale":e(d),method:e(o),components:e(p).components,url:e(f),path_doc:e(v),file:e(_),server:e(A),"sub-params":e(k)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):e(c)?(l(),m(I,{key:4,route:e(c),"current-locale":e(d),method:e(o),components:e(p).components,url:e(f),path_doc:e(v),file:e(_),server:e(A),"sub-params":e(k)},null,8,["route","current-locale","method","components","url","path_doc","file","server","sub-params"])):(l(),m(W,{key:5})),O(E,null,{default:te(()=>[O(N,{"current-locale":e(d),doc:e(p),path:e(v),file:e(_)},null,8,["current-locale","doc","path","file"])]),_:1})])}}});export{he as default};
